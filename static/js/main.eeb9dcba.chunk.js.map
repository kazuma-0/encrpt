{"version":3,"sources":["components/home.js","components/userpage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","data","token","key","passwd","onUserNameClick","bind","onKeyChange","onGeneratePassword","request","get","this","match","params","code","err","response","body","setState","JSON","parse","console","log","param","e","target","value","error","statusCode","className","Table","responsive","variant","hover","striped","bordered","map","onClick","username","website","InputGroup","FormControl","as","aria-label","readOnly","placeholder","onChange","Button","Card","color","Component","User","userName","passWord","fernet","onUserName","onPassWord","onWebSite","onToken","ApiCaller","onManage","prompt","window","location","assign","alert","Form","autoComplete","Group","controlId","Control","size","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"upBA4FeA,G,yDAtFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACTC,KAAM,GACNC,MAAM,GACNC,IAAI,GACJC,OAAO,IAEX,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAZT,E,gEAcC,IAAD,OACfG,IAAQC,IAAR,gDAAqDC,KAAKZ,MAAMa,MAAMC,OAAOC,OAC7E,SAACC,EAAIC,EAASC,GACV,EAAKC,SAAS,CAACjB,KAAKkB,KAAKC,MAAMH,KAC/BI,QAAQC,IAAI,EAAKtB,MAAMC,W,sCAGjBsB,GACVF,QAAQC,IAAIC,GACZZ,KAAKO,SAAS,CAAChB,MAAMqB,M,kCAEfC,GACRb,KAAKO,SAAS,CAACf,IAAIqB,EAAEC,OAAOC,U,2CAEX,IAAD,OAChBjB,IAAQC,IAAR,8CAAmDC,KAAKX,MAAMG,IAA9D,kBAA2EQ,KAAKX,MAAME,QAAQ,SAACyB,EAAMX,EAASC,GAC/E,MAAxBD,EAASY,YACR,EAAKV,SAAS,CAACd,OAAOe,KAAKC,MAAMH,GAAMb,SACvCiB,QAAQC,IAAIL,IAGZ,EAAKC,SAAS,CAACd,OAAO,qB,+BAItB,IAAD,OACP,OACG,qBAAKyB,UAAU,QAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,eAACC,EAAA,EAAD,CAAOC,YAAU,EAACC,QAAQ,OAAOC,OAAK,EAACC,SAAO,EAACC,UAAQ,EAAvD,UACI,kCACI,0CACA,4CAEJ,gCACKxB,KAAKX,MAAMC,KAAKmC,KAAI,SAAAnC,GAAI,OACzB,+BACA,oBAAIoC,QAAS,kBAAI,EAAKhC,gBAAgBJ,EAAKC,QAA3C,SAAqED,EAAKqC,UAAlBrC,EAAKC,OACzD,6BAAMD,EAAKsC,uBAM3B,sBAAKV,UAAU,aAAf,UACI,uCACI,cAACW,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAaZ,UAAU,MAAMa,GAAG,WAAWC,aAAW,gBAAgBjB,MAAOf,KAAKX,MAAME,MAAO0C,UAAQ,MAE1G,sBAAKf,UAAU,MAAf,UACG,uCACA,cAACW,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAcZ,UAAU,MAAMa,GAAG,WAAWC,aAAW,gBAAgBE,YAAY,kBAAkBC,SAAUnC,KAAKJ,mBAGvH,cAACwC,EAAA,EAAD,CAAQlB,UAAU,cAAcQ,QAAS1B,KAAKH,mBAA9C,0BACuB,KAAtBG,KAAKX,MAAMI,QACZ,qBAAKyB,UAAU,kBAAf,SACD,cAACmB,EAAA,EAAD,CAAMnB,UAAU,WAAWoB,MAAM,UAAjC,SACKtC,KAAKX,MAAMI,uB,GA3EhB8C,c,SC0FJC,G,yDAxFb,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXoD,SAAU,GACVC,SAAU,GACVd,QAAS,GACTrC,MAAO,GACPoD,OAAQ,GACRxC,KAAK,IAEP,EAAKyC,WAAa,EAAKA,WAAWjD,KAAhB,gBAClB,EAAKkD,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAKmD,UAAY,EAAKA,UAAUnD,KAAf,gBACjB,EAAKoD,QAAU,EAAKA,QAAQpD,KAAb,gBACf,EAAKqD,UAAY,EAAKA,UAAUrD,KAAf,gBACjB,EAAKsD,SAAW,EAAKA,SAAStD,KAAd,gBAhBC,E,uDAkBRkB,GACTb,KAAKO,SAAS,CAAEkC,SAAU5B,EAAEC,OAAOC,U,iCACxBF,GACXb,KAAKO,SAAS,CAAEmC,SAAU7B,EAAEC,OAAOC,U,gCACzBF,GACVb,KAAKO,SAAS,CAAEqB,QAASf,EAAEC,OAAOC,U,8BAC1BF,GACRb,KAAKO,SAAS,CAAEhB,MAAOsB,EAAEC,OAAOC,U,kCAErB,IAAD,OACVjB,IAAQC,IAAR,mDAAwDC,KAAKX,MAAMoD,SAAnE,qBAAwFzC,KAAKX,MAAMqD,SAAnG,oBAAuH1C,KAAKX,MAAMuC,QAAlI,iBAAkJ5B,KAAKX,MAAME,QAAS,SAACa,EAAKC,EAAUC,GACxJ,MAAxBD,EAASY,WACX,EAAKV,SAAS,CAAEoC,OAAQnC,KAAKC,MAAMH,GAAMd,MAGzC,EAAKe,SAAS,CAACoC,OAAO,uB,+BAKnB9B,GACP,IAAMV,EAAO+C,OAAO,0BACpBpD,IAAQC,IAAR,gDAAqDI,IAAO,SAACa,EAAMX,EAASC,GAC/C,MAAxBD,EAASY,WAEVkC,OAAOC,SAASC,OAAhB,iBAAiClD,IAEjCmD,MAAM,2B,+BAKV,OACE,sBAAKpC,UAAU,MAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,SAASQ,QAAS1B,KAAKiD,SAAtC,oBAGA,qBAAK/B,UAAU,WACf,sBAAKA,UAAU,SAAf,UACE,eAACqC,EAAA,EAAD,CAAMrC,UAAU,WAAWsC,aAAa,MAAxC,UACE,cAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAAtB,SACE,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,KAAK1B,YAAY,WAAWC,SAAUnC,KAAK4C,eAEhE,uBACA,cAACW,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAAtB,SACE,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,KAAK1B,YAAY,WAAWC,SAAUnC,KAAK6C,eAEhE,uBACA,cAACU,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,SACE,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,KAAK1B,YAAY,UAAUC,SAAUnC,KAAK8C,cAE/D,uBACA,cAACS,EAAA,EAAKE,MAAN,CAAYC,UAAU,YAAtB,SACE,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,KAAK1B,YAAY,QAAQC,SAAUnC,KAAK+C,eAG/D,qBAAK7B,UAAU,SAAf,SACE,cAACkB,EAAA,EAAD,CAAQf,QAAQ,OAAOuC,KAAK,KAAKtB,MAAM,UAAUZ,QAAS1B,KAAKgD,UAA/D,SAA0E,4CAGxD,KAArBhD,KAAKX,MAAME,OACV,cAAC8C,EAAA,EAAD,UAAOrC,KAAKX,MAAMsD,gB,GAlFTJ,cCSJsB,E,uKATX,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,cAAcC,UAAW7E,W,GALjCoD,aCQH0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eeb9dcba.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { Button, Table, InputGroup, FormControl, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport request from 'request'\nimport './home.css'\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        data: [],\n        token:'',\n        key:'',\n        passwd:''\n    }\n    this.onUserNameClick = this.onUserNameClick.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n    this.onGeneratePassword = this.onGeneratePassword.bind(this);\n  }\n  componentDidMount(){\n      request.get(`https://encrpt-x.nyaator.co/auth?code=${this.props.match.params.code}`,\n      (err,response,body)=>{\n          this.setState({data:JSON.parse(body)})\n          console.log(this.state.data)\n      })\n  }\nonUserNameClick(param){\n      console.log(param)\n      this.setState({token:param})\n  }\nonKeyChange(e){\n    this.setState({key:e.target.value})\n}\nonGeneratePassword(){\n    request.get(`https://encrpt-x.nyaator.co/dec?key=${this.state.key}&token=${this.state.token}`,(error,response,body)=>{\n        if(response.statusCode === 200){\n            this.setState({passwd:JSON.parse(body).passwd})\n            console.log(body)\n        }\n        else{\n            this.setState({passwd:\"Invalid Key\"})\n        }\n    })\n}\n  render() {\n    return (\n       <div className='cardN'>\n           <div className='Container'>\n               <div className='Container2'>\n                   <Table responsive variant='dark' hover striped bordered> \n                       <thead>\n                           <th >UserName</th>\n                           <th>Website</th>\n                       </thead>\n                       <tbody>\n                           {this.state.data.map(data=>(\n                           <tr>\n                           <td onClick={()=>this.onUserNameClick(data.token)} key={data.token}>{data.username}</td>\n                               <td >{data.website}</td>\n                               </tr>\n                           ))}\n                       </tbody>\n                   </Table>\n               </div>\n               <div className='Container3'>\n                   <h3>Token</h3>\n                       <InputGroup>\n                       <FormControl className=\"rxr\" as=\"textarea\" aria-label=\"With textarea\" value={this.state.token} readOnly/>\n                       </InputGroup>\n                    <div className=\"key\">\n                       <h3> Key </h3>\n                       <InputGroup>\n                       <FormControl  className=\"xrx\" as=\"textarea\" aria-label=\"With textarea\" placeholder=\"Paste key here.\" onChange={this.onKeyChange}/>\n                       </InputGroup>\n                    </div>\n                    <Button className=\"buttonClass\" onClick={this.onGeneratePassword}>Get Password</Button>\n                    {this.state.passwd !== \"\" &&\n                    <div className='passwordDisplay'>\n                   <Card className='password' color='primary'>\n                       {this.state.passwd}\n                   </Card>\n                   </div>\n                    }\n                   </div>\n                   \n           </div>\n       </div>\n    )\n  }\n}\n\nexport default Home;\n\n","import { Component } from 'react';\nimport { Button, Form,Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport request from 'request'\nimport './App.css'\n\nclass User extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      userName: '',\n      passWord: '',\n      website: '',\n      token: '',\n      fernet: '',\n      code:''\n    }\n    this.onUserName = this.onUserName.bind(this);\n    this.onPassWord = this.onPassWord.bind(this);\n    this.onWebSite = this.onWebSite.bind(this);\n    this.onToken = this.onToken.bind(this);\n    this.ApiCaller = this.ApiCaller.bind(this);\n    this.onManage = this.onManage.bind(this);\n  }\n  onUserName(e) {\n    this.setState({ userName: e.target.value })\n  } onPassWord(e) {\n    this.setState({ passWord: e.target.value })\n  } onWebSite(e) {\n    this.setState({ website: e.target.value })\n  } onToken(e) {\n    this.setState({ token: e.target.value })\n  }\n  ApiCaller() {\n    request.get(`https://encrpt-x.nyaator.co/gen?username=${this.state.userName}&password=${this.state.passWord}&website=${this.state.website}&code=${this.state.token}`, (err, response, body) => {\n      if (response.statusCode === 200) {\n        this.setState({ fernet: JSON.parse(body).key })\n      }\n      else {\n        this.setState({fernet:\"Invaild Token\"})\n      }\n    })\n  }\n\n  onManage(e){\n    const code = prompt('Enter User Access Code')\n    request.get(`https://encrpt-x.nyaator.co/auth?code=${code}`,(error,response,body)=>{\n      if(response.statusCode === 200){\n        //if (window.location.href.indexOf('#') > -1){ window.location.assign(`/${window.location.hash}home/${code}`) }\n        window.location.assign(`#/home/${code}`)\n      }else{\n        alert('Wrong Access Token');\n      }\n    })\n  }\n  render() {\n    return (\n      <div className='App'>\n        <div className=\"circle1\"></div>\n        <div className=\"circle2\"></div>\n        <div className=\"manage\" onClick={this.onManage} >\n          Manage\n          </div>\n        <div className='center'></div>\n        <div className='filler'>\n          <Form className='UserForm' autoComplete='off'>\n            <Form.Group controlId='basicUsername'>\n              <Form.Control size='lg' placeholder='UserName' onChange={this.onUserName} ></Form.Control>\n            </Form.Group>\n            <br />\n            <Form.Group controlId='basicPassword'>\n              <Form.Control size='lg' placeholder='Password' onChange={this.onPassWord}></Form.Control>\n            </Form.Group>\n            <br />\n            <Form.Group controlId='basicWebsite'>\n              <Form.Control size='lg' placeholder='Website' onChange={this.onWebSite}></Form.Control>\n            </Form.Group>\n            <br />\n            <Form.Group controlId='basicCode' >\n              <Form.Control size='lg' placeholder='Token' onChange={this.onToken}></Form.Control>\n            </Form.Group>\n          </Form>\n          <div className='submit'>\n            <Button variant='dark' size='sm' color='primary' onClick={this.ApiCaller}><b>SAVE</b></Button>\n          </div>\n        </div>\n        {this.state.token !== '' && \n          <Card>{this.state.fernet}</Card>\n          }\n      </div>\n    )\n  }\n}\n\nexport default User;\n\n","import { Component } from 'react';\nimport {Route,HashRouter as Hash} from 'react-router-dom'\nimport Home from './components/home'\nimport User from './components/userpage';\nclass App extends Component {\n  render(){\n    return(\n      <Hash>\n        <Route exact path='/' component={User}/>\n        <Route exact path='/home/:code' component={Home}/>\n      </Hash>\n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}